name: Daily Data Sync

on:
  schedule:
    # Her gün saat 02:00 UTC (05:00 Türkiye saati)
    # EPİAŞ verileri ~3 saat gecikmeli, 05:00'da dünün tüm verileri hazır
    - cron: '0 2 * * *'

  # Manuel tetikleme için
  workflow_dispatch:

# Aynı workflow birden fazla çalışmasını önle (önceki iptal edilir)
concurrency:
  group: daily-sync
  cancel-in-progress: true

jobs:
  sync-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Create logs directory
        run: mkdir -p backend/logs

      - name: Save database hash before sync
        id: hash-before
        run: |
          HASH_BEFORE=$(md5sum backend/data/energy.db | awk '{print $1}')
          echo "hash=$HASH_BEFORE" >> $GITHUB_OUTPUT
          echo "📊 Database hash before sync: $HASH_BEFORE"

      - name: Run catch-up data sync (with retry)
        working-directory: ./backend
        env:
          EPIAS_USERNAME: ${{ secrets.EPIAS_USERNAME }}
          EPIAS_PASSWORD: ${{ secrets.EPIAS_PASSWORD }}
        run: |
          echo "Starting catch-up data sync..."

          # Retry logic: 3 deneme, exponential backoff (1s, 2s, 4s)
          MAX_RETRIES=3
          RETRY_COUNT=0
          SUCCESS=false

          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ "$SUCCESS" = "false" ]; do
            echo "🔄 Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES"

            if npx tsx src/scripts/catchUpSync.ts; then
              SUCCESS=true
              echo "✅ Sync successful!"
            else
              RETRY_COUNT=$((RETRY_COUNT + 1))
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                WAIT_TIME=$((2 ** RETRY_COUNT))
                echo "⚠️  Sync failed, retrying in ${WAIT_TIME}s..."
                sleep $WAIT_TIME
              else
                echo "❌ All retries exhausted, sync failed"
                exit 1
              fi
            fi
          done

          echo "Catch-up sync completed!"

      - name: Save database hash after sync
        id: hash-after
        run: |
          HASH_AFTER=$(md5sum backend/data/energy.db | awk '{print $1}')
          echo "hash=$HASH_AFTER" >> $GITHUB_OUTPUT
          echo "📊 Database hash after sync: $HASH_AFTER"

      - name: Check for database changes
        id: git-check
        run: |
          echo "🔍 Comparing hashes..."
          echo "HASH_BEFORE = ${{ steps.hash-before.outputs.hash }}"
          echo "HASH_AFTER  = ${{ steps.hash-after.outputs.hash }}"

          if [ "${{ steps.hash-before.outputs.hash }}" != "${{ steps.hash-after.outputs.hash }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Database changed! (hash mismatch)"
            echo "Before: ${{ steps.hash-before.outputs.hash }}"
            echo "After: ${{ steps.hash-after.outputs.hash }}"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "❌ No database changes detected (hash identical)"
          fi

          echo "🎯 Changed output: ${{ steps.git-check.outputs.changed }}"

      - name: Commit and push changes
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Remote'tan son değişiklikleri çek (eğer başka commit varsa)
          git pull --rebase origin main || echo "No remote changes to pull"

          git add backend/data/energy.db
          git add backend/logs/*.log || true
          git commit -m "chore: auto-sync EPİAŞ data [skip ci]"
          git push
          echo "✅ Changes committed and pushed successfully"

      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-logs-${{ github.run_number }}
          path: backend/logs/*.log
          retention-days: 7
